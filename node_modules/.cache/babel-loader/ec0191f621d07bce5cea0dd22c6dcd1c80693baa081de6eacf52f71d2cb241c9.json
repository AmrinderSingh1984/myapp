{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amrinder\\\\Desktop\\\\ReactJs\\\\myapp\\\\src\\\\pages\\\\About.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RadioButtonFilter = ({\n  options,\n  selectedOption,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: option.value,\n        checked: selectedOption === option.value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this), option.label]\n    }, option.value, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = RadioButtonFilter;\nconst CheckboxFilter = ({\n  options,\n  selectedOptions,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: option.value,\n        checked: selectedOptions.includes(option.value),\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), option.label]\n    }, option.value, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c2 = CheckboxFilter;\nfunction About() {\n  _s();\n  const radioOptions = [{\n    value: 'option1',\n    label: 'Option 1'\n  }, {\n    value: 'option2',\n    label: 'Option 2'\n  }\n  // Add more options as needed\n  ];\n\n  const checkboxOptions = [{\n    value: 'checkbox1',\n    label: 'Checkbox 1'\n  }, {\n    value: 'checkbox2',\n    label: 'Checkbox 2'\n  }\n  // Add more options as needed\n  ];\n\n  const [selectedRadioOption, setSelectedRadioOption] = useState(null);\n  const [selectedCheckboxOptions, setSelectedCheckboxOptions] = useState([]);\n  const handleRadioChange = event => {\n    setSelectedRadioOption(event.target.value);\n  };\n  const handleCheckboxChange = event => {\n    const value = event.target.value;\n    if (selectedCheckboxOptions.includes(value)) {\n      setSelectedCheckboxOptions(selectedCheckboxOptions.filter(option => option !== value));\n    } else {\n      setSelectedCheckboxOptions([...selectedCheckboxOptions, value]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"test\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: selectedRadioOption\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(RadioButtonFilter, {\n      options: radioOptions,\n      selectedOption: selectedRadioOption,\n      onChange: handleRadioChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CheckboxFilter, {\n      options: checkboxOptions,\n      selectedOptions: selectedCheckboxOptions,\n      onChange: handleCheckboxChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(About, \"e2BRHxlLW6TMp5yyjAmTv3B3oRQ=\");\n_c3 = About;\nexport default About;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"RadioButtonFilter\");\n$RefreshReg$(_c2, \"CheckboxFilter\");\n$RefreshReg$(_c3, \"About\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RadioButtonFilter","options","selectedOption","onChange","children","map","option","type","value","checked","fileName","_jsxFileName","lineNumber","columnNumber","label","_c","CheckboxFilter","selectedOptions","includes","_c2","About","_s","radioOptions","checkboxOptions","selectedRadioOption","setSelectedRadioOption","selectedCheckboxOptions","setSelectedCheckboxOptions","handleRadioChange","event","target","handleCheckboxChange","filter","className","_c3","$RefreshReg$"],"sources":["C:/Users/Amrinder/Desktop/ReactJs/myapp/src/pages/About.js"],"sourcesContent":["import React ,{useState} from 'react'\r\n\r\nconst RadioButtonFilter = ({ options, selectedOption, onChange }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <label key={option.value}>\r\n          <input\r\n            type=\"radio\"\r\n            value={option.value}\r\n            checked={selectedOption === option.value}\r\n            onChange={onChange}\r\n          />\r\n          {option.label}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst CheckboxFilter = ({ options, selectedOptions, onChange }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <label key={option.value}>\r\n          <input\r\n            type=\"checkbox\"\r\n            value={option.value}\r\n            checked={selectedOptions.includes(option.value)}\r\n            onChange={onChange}\r\n          />\r\n          {option.label}\r\n        </label>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nfunction About(){\r\n    const radioOptions = [\r\n        { value: 'option1', label: 'Option 1' },\r\n        { value: 'option2', label: 'Option 2' },\r\n        // Add more options as needed\r\n      ];\r\n    \r\n      const checkboxOptions = [\r\n        { value: 'checkbox1', label: 'Checkbox 1' },\r\n        { value: 'checkbox2', label: 'Checkbox 2' },\r\n        // Add more options as needed\r\n      ];\r\n    \r\n      const [selectedRadioOption, setSelectedRadioOption] = useState(null);\r\n      const [selectedCheckboxOptions, setSelectedCheckboxOptions] = useState([]);\r\n    \r\n      const handleRadioChange = event => {\r\n        setSelectedRadioOption(event.target.value);\r\n      };\r\n    \r\n      const handleCheckboxChange = event => {\r\n        const value = event.target.value;\r\n        if (selectedCheckboxOptions.includes(value)) {\r\n          setSelectedCheckboxOptions(selectedCheckboxOptions.filter(option => option !== value));\r\n        } else {\r\n          setSelectedCheckboxOptions([...selectedCheckboxOptions, value]);\r\n        }\r\n      };\r\n    \r\n      return (\r\n        <div className='test'>\r\n          <h2>{selectedRadioOption}</h2>\r\n          <RadioButtonFilter\r\n            options={radioOptions}\r\n            selectedOption={selectedRadioOption}\r\n            onChange={handleRadioChange}\r\n          />\r\n    \r\n          <h2></h2>\r\n          <CheckboxFilter\r\n            options={checkboxOptions}\r\n            selectedOptions={selectedCheckboxOptions}\r\n            onChange={handleCheckboxChange}\r\n          />\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default About"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}